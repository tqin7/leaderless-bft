syntax = "proto3";

service Gossip {
    //checks whether hash already exists
    rpc Poke (ReqId) returns (Bool) {}
    //sends new info
    rpc Push (ReqBody) returns (Void) {}

    //gets requests
    rpc GetAllRequests (Void) returns (Requests) {}
}

message Requests {
    repeated string requests = 1;
}

message ReqId {
    bytes hash = 1;
}

message ReqBody {
    bytes body = 1;
}

message Bool {
    bool status = 1;
}

message Void {}

service Snowball {
    //get vote from this node
    rpc GetVote (SeqNumMsg) returns (SeqNumMsg) {}
    //a client sends request using this method
    rpc SendReq (ReqBody) returns (Void) {}

    //rpc GetSeqNum (ReqBody) returns (SeqNumMsg) {}
}

message SeqNumMsg {
    uint64 seq_num = 1;
    bytes req_hash = 2; // hash of the corresponding request
}

service Pbft {
    // client sends request
    rpc GetReq (ReqBody) returns (Void) {}
    // node sends prePrepare msg
//    rpc GetPrePrepare (ReqBody) returns (Void) {}
//    // node sends prepare msg
//    rpc GetPrepare (ReqBody) returns (Void) {}
//    // node sends commit msg
//    rpc GetCommit (ReqBody) returns (Void) {}
}
